---
- hosts: all
  become: true
  become_method: sudo
  vars:
    # CHANGE THESE!!!! This should reflect your actual VM
    # IP, gameserver flag endpoint and team token.
    # Otherwise you won't see any packets incoming.
    # And no flags scored whatsoever.
    vulnbox_ip: 192.168.102.77
    gameserver_url: http://10.10.0.1:8080/flags
    team_token: e37cdad1757d778611de923541714905
    number_of_teams: 128
    teams_format: "f'10.60.{i}.1'"

    # This should work as it is
    system_protocol: ructf_http

    # Type here the interface that runs the WireGuard tunnel!
    packmate_interface: game

    # Check your Ubuntu version, this should less important
    # since it's only used to determine the correct repo url
    # in order to install Docker. In the actual vulnbox, Docker
    # should be already installed, thus Docker installation
    # will be skipped.
    ubuntu_version: jammy

    # You shouldn't edit past this comment.
    # this is the new root password after the deploy of ansible
    root_password: 50052179a37112671e53e9cd4a12c3ec16798d3948720a0c7c2f94124edb975b
    packmate_login: unimore
    packmate_password: 851a6af308dddc04a7779667a1516884dc2d8a9d00cf33e0a4e8bb87f66d8817
    webhook_url: https://discordia.com/api/webhooks/97942970506/OQBu_VL-K-5gL3wpy_bmdTIsCb3oa7vBPHcWGV0aDxHrI23JXNrw
    ctffarm_password: 2943dd01f36e6d9bf8cf66b1b8be2dd865be4ebb191efcb18aa8c4c5eedf099c
  tasks:
    - name: install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    # Needed for Ansible to work correctly.
    - name: install dependencies
      apt:
        name:
          - python3
          - python3-pip

    # This throws an error if Docker is not installed.
    # Do not worry if it errors out. It's fine.
    - name: check if Docker is installed
      shell: command -v docker
      register: docker_exists
      ignore_errors: yes

    - name: install Docker prerequisites
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true
      when: docker_exists is failed

    - name: add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: docker_exists is failed

    - name: add Docker Repository
      apt_repository:
        repo: "deb https://download.docker.com/linux/ubuntu {{ ubuntu_version }} stable"
        state: present
      when: docker_exists is failed

    - name: update apt and install docker-ce
      apt:
        name:
          - docker-ce
          - docker-compose-plugin
        state: latest
        update_cache: true
      when: docker_exists is failed

    - name: change root password
      user:
        name: root
        update_password: always
        password: "{{ root_password |password_hash('sha512') }}"

    - name: download S4DFarm
      ansible.builtin.git:
        repo: 'https://github.com/C4T-BuT-S4D/S4DFarm'
        dest: '/root/ctffarm'
        version: 'f340ca241d581d1fbf98805023926c075478937e'  # Pinned at 2023-09-23
        force: yes

    - name: install custom config for S4DFarm
      copy:
        src: ./configs/ctffarm.config.py
        dest: /root/ctffarm/server/app/config.py

    - name: patch docker-compose to use 42069 port
      ansible.builtin.replace:
        path: /root/ctffarm/docker-compose.yml
        after: 'NameVirtualHost [*]'
        regexp: '5137'
        replace: '42069'

    - name: update gameserver IP address
      ansible.builtin.lineinfile:
        path: /root/ctffarm/server/app/config.py
        search_string: "'SYSTEM_URL': '"
        line: "    'SYSTEM_URL': '{{ gameserver_url }}',"

    - name: update team token
      ansible.builtin.lineinfile:
        path: /root/ctffarm/server/app/config.py
        search_string: "'SYSTEM_TOKEN': '"
        line: "    'SYSTEM_TOKEN': '{{ team_token }}',"

    - name: update CTFfarm password
      ansible.builtin.lineinfile:
        path: /root/ctffarm/server/app/config.py
        search_string: "'SERVER_PASSWORD': '"
        line: "    'SERVER_PASSWORD': '{{ ctffarm_password }}',"

    - name: update number of teams
      ansible.builtin.lineinfile:
        path: /root/ctffarm/server/app/config.py
        search_string: "for i in range(0, 40)"
        line: "        for i in range(0, {{ number_of_teams }} + 1)"

    - name: update team teams_format
      ansible.builtin.lineinfile:
        path: /root/ctffarm/server/app/config.py
        search_string: "f'Team #{i}': f'10.60.{i}.1'"
        line: "        f'Team #{i}': {{ teams_format }}"

    - name: update system system_protocol
      ansible.builtin.lineinfile:
        path: /root/ctffarm/server/app/config.py
        search_string: "'SYSTEM_PROTOCOL': '"
        line: "    'SYSTEM_PROTOCOL': '{{ system_protocol }}',"

    - name: add 'denied' to rejected status list
      ansible.builtin.lineinfile:
        path: /root/ctffarm/server/app/protocols/ructf_http.py
        search_string: "FlagStatus.REJECTED:"
        line: "    FlagStatus.REJECTED: ['bad', 'wrong', 'expired', 'unknown', 'your own', 'denied',"

    - name: run S4DFarm
      community.docker.docker_compose_v2:
        project_src: '/root/ctffarm'
        build: 'always'
      register: output

    - name: download packmate
      ansible.builtin.git:
        repo: 'https://gitlab.com/packmate/Packmate.git'
        dest: '/root/packmate'
        force: yes
        recursive: yes
        version: "7bc02dd91fdedac42164f572994d72e07ca33b34"  # Pinned 2022

    - name: copy template packmate docker-compose
      copy:
        src: ./configs/docker-compose.packmate.yml
        dest: /root/packmate/docker-compose.yml

    - name: install Packmate configuration
      copy:
        src: ./configs/packmate.template.env
        dest: /root/packmate/.env

    - name: add packmate local ip
      ansible.builtin.lineinfile:
        path: /root/packmate/.env
        search_string: "PACKMATE_LOCAL_IP="
        line: "PACKMATE_LOCAL_IP={{ vulnbox_ip }}"

    - name: add packmate web password
      ansible.builtin.lineinfile:
        path: /root/packmate/.env
        search_string: "PACKMATE_WEB_PASSWORD="
        line: "PACKMATE_WEB_PASSWORD={{ packmate_password }}"

    - name: add packmate login
      ansible.builtin.lineinfile:
        path: /root/packmate/.env
        search_string: "PACKMATE_WEB_LOGIN="
        line: "PACKMATE_WEB_LOGIN={{ packmate_login }}"

    - name: add packmate interface
      ansible.builtin.lineinfile:
        path: /root/packmate/.env
        search_string: "PACKMATE_INTERFACE="
        line: "PACKMATE_INTERFACE={{ packmate_interface }}"

    - name: run packmate
      community.docker.docker_compose_v2:
        project_src: '/root/packmate'
        build: 'always'

  # --------------------------------------------------------------------------------------------------------------------

    - name: copy services checker
      copy:
        src: ./check_containers.sh
        dest: /usr/bin/check_containers.sh
        # Ensure it's executable
        mode: 0755

    - name: check containers every minute
      ansible.builtin.cron:
        name: "check containers"
        job: "check_containers.sh {{ webhook_url }}"

    - name: copy firewall setup script
      copy:
        src: ./firewall.sh
        dest: /usr/bin/firewall.sh
        # Ensure it's executable
        mode: 0755

    - name: add SSH keys
      ansible.posix.authorized_key:
        exclusive: false
        user: root
        state: "present"
        key: "{{ lookup('file', './ssh_keys') }}"
